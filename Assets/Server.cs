using System.IO;
using UnityEngine;

public class Server : MonoBehaviour
{
    System.Diagnostics.Process process;
    void Start()
    {
        System.Diagnostics.ProcessStartInfo start = new System.Diagnostics.ProcessStartInfo();
        //python interprater location
        start.FileName = "manage.py";
        //argument with file name and input parameters
#if UNITY_EDITOR
        start.WorkingDirectory = "Server";
#else
        start.WorkingDirectory = Path.Join(Application.dataPath, "Server");
#endif
        start.Arguments = "runserver";
        start.UseShellExecute = false;// Do not use OS shell
        start.CreateNoWindow = true; // We don't need new window
        start.RedirectStandardOutput = true;// Any output, generated by application will be redirected back
        start.RedirectStandardError = true; // Any error in standard output will be redirected back (for example exceptions)
        start.LoadUserProfile = true;
        process = System.Diagnostics.Process.Start(start);
        LogServer(this);
    }

    private async void LogServer(Server self)
    {
        while (!process.HasExited)
        {
            string line = await process.StandardError.ReadLineAsync();
            if (line != null)
                Debug.Log(line, self);
        }
        process.Close();
    }

    void OnApplicationQuit()
    {
        Destroy();
    }

    void Destroy()
    {
        process.CloseMainWindow();
    }
}